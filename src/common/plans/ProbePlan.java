package common.plans;

import java.util.BitSet;

/**
 * Common super-class of all plans whose
 * purpose is to probe the cardinality of
 * specific relations.
 * 
 * @author immanueltrummer
 *
 */
public abstract class ProbePlan {
	/**
	 * Result relation of this plan.
	 */
	public final BitSet resultRel;
	/**
	 * Plan execution cost.
	 */
	public final double cost;
	/**
	 * Number of columns generated at plan root.
	 */
	public final int nrColumns;
	/**
	 * Sets result relation for this plan.
	 * 
	 * @param resultRel	relation generated by plan
	 * @param cost		plan execution cost
	 */
	public ProbePlan(BitSet resultRel, double cost, int nrColumns) {
		this.resultRel = resultRel;
		this.cost = cost;
		this.nrColumns = nrColumns;
	}
	/**
	 * Returns true iff the plan tree rooted at the current
	 * node contains a node producing the given intermediate
	 * result.
	 * 
	 * @param rel	intermediate result relation
	 * @return		true iff this sub-tree contains the given result
	 */
	public abstract boolean findRel(BitSet rel);
}
